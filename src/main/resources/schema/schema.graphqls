type Query {
    movies(movie: String): [Movie]
    reviews(movie: String!, platform: String): [Review]
}

type Mutation {
    addMovie(movie: String!): Movie
    addReview(reviewInput: ReviewInput!): Review
    scrapeRatings(movie: String!): [Review]
}

input ReviewInput {
    movie: String!
    score: Float!,
    platform: String!
}

type Movie {
    name: String!
    reviews: [Review]
}

type ReviewResponse {
    score: Float!
    platform: String!
}

type ReviewError {
    error: [ReviewErrorEnum]!
}

enum ReviewErrorEnum {
    MOVIE_NOT_FOUND
}

union Review = ReviewResponse | ReviewError